(* Programming Languages, Dan Grossman *)
(* Section 3: Another Closure Idiom: Combining Functions *)

fun compose (f,g) = fn x => f(g,x)

(* ('b -> 'c) * ('a -> 'b) -> ('a -> 'c) *)
			     
val test = compose((fn (acc,x) => acc + x), 3) 2;


fun sqrt_of_abs i = Math.sqrt (Real.fromInt (ab i))

fun sqrt_of_abs i = (Math.sqrt o Real.fromInt o abs) i

val sqrt_of_abs = Math.sqrt o Real.fromInt o abs
(* |> !> *)
infix !>

fun x !> f = f x

fun sqrt_of_abs i = i !> abs !> Real.fromInt !> Math.sqrt
		      
		      
						 
fun backup1 (f,g) = fn x => case f x of
				NONE => g x
			      | SOME y => y
												       